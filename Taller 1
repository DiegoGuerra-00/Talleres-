package Taller;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Scanner;


public class Taller_POO {

	public static void main(String[] args) throws IOException
	{
		while (true) 
		{
			Scanner verificar = new Scanner(System.in);  //USAR VERIFICAR PARA TEMA DE INPUT
			
			System.out.print("¿MENÚ USUARIO O MENÚ ADMIN? (U/A/S para salir): ");
			String usuario_admin = verificar.nextLine().toUpperCase(); //USA "toUpperCase" para que siempre sea mayuscula
			
			
			if (usuario_admin.equals("U"))// Si se ingresa "U", se accede al menú de usuario y se muestran las opciones
			{
				
				
				System.out.println("------------------");
				System.out.println("MENÚ USUARIO:");
				System.out.println("1. Ver lista experimentos \n" + 
									"2. Mostrar matriz de confusión de un experimento \n"+
									"3. Ver métricas de un experimento \n"+
									"4. Ver promedio de Accuracy de todos los modelos"
									);
				System.out.print("Seleccione una opción (1,2,3 o 4): ");
				int opcion_elegida = Integer.parseInt(verificar.nextLine());//El usuario elige una opción (un entero)
				
				if (opcion_elegida == 1) 
				{ //Opcion 1, se muestran los experimentos 
					System.out.println("------------------");
					System.out.println("Lista experimentos:");
					File line = new File("experimentos.txt"); // se abre el archivo
					Scanner fila = new Scanner(line);								// con los experimentos
						
					while(fila.hasNextLine()) // se recorre el archivo 
					{
						String linea = fila.nextLine();
						String[] partes = linea.split(";");
						
						String identificador = partes[0];
						String descripcion= partes[1];
						
						System.out.println(identificador+" " + descripcion);	// se muestran por pantalla los experimentos
					}fila.close();
					System.out.println("------------------");

				}else if(opcion_elegida == 2) 
				{ // opción 2, se muestra un exp en especifico 
					System.out.println("------------------");
					System.out.print("Eliga un experimento (Exp1, Exp2, Exp3, Exp4): ");
					String nuevo_exp = verificar.nextLine().toUpperCase();// sera si o si en mayuscula 
					while (!nuevo_exp.equals("EXP1") && !nuevo_exp.equals("EXP2") && !nuevo_exp.equals("EXP3") && (!nuevo_exp.equals("EXP4"))) 
					{
						System.out.println("Error, debe ingresar 'Exp1', 'Exp2', 'Exp3' o 'Exp4'"); // en este while se hace una prueba de error
						System.out.print("Eliga un experimento: ");
						nuevo_exp = verificar.nextLine().toUpperCase();
					}
						
					matriz_confusion(nuevo_exp,0); // Se llama al metodo y se muestra el resultado 
					System.out.println("------------------");
					
				}else if (opcion_elegida == 3)// lo mismo con la opción 3
				{
					System.out.println("------------------");
					System.out.print("Eliga un experimento (Exp1, Exp2, Exp3, Exp4): ");
					String nuevo_exp = verificar.nextLine().toUpperCase();
					while (!nuevo_exp.equals("EXP1") && !nuevo_exp.equals("EXP2") && !nuevo_exp.equals("EXP3") && (!nuevo_exp.equals("EXP4"))) 
					{
						System.out.println("Error, debe ingresar 'Exp1', 'Exp2', 'Exp3' o 'Exp4'"); // en este while se hace una prueba de error
						System.out.print("Eliga un experimento: ");
						nuevo_exp = verificar.nextLine().toUpperCase();
					}
					matriz_confusion(nuevo_exp,opcion_elegida); // se retorna una lista con todos los contadores del respectivo proyecto
					double tp = matriz_confusion(nuevo_exp,opcion_elegida)[0];// se almacenan en variables
					double fp = matriz_confusion(nuevo_exp,opcion_elegida)[1];
					double tn = matriz_confusion(nuevo_exp,opcion_elegida)[2];
					double fn = matriz_confusion(nuevo_exp,opcion_elegida)[3];
					
					double Accuracy  = (tp+ tn) / (tp + fp + tn + fn);// se siguen las formulas del taller 
					double Precision  = tp / (tp + fp);
					double Recall  = tp / (tp + fn);
					double f1_score = 2 * (Precision  * Recall) / (Precision + Recall);
					
					System.out.println(" ");
					System.out.println("MÉTRICAS DE EXPERIMENTO "+nuevo_exp); // se muestra en pantalla 
					System.out.println(" ");
					System.out.println("Accuracy: "+Accuracy+"\n" +"Precision: "+Precision+"\n"+"Recall: "+Recall+"\n"+"F1: "+f1_score);
					System.out.println(" ");
					System.out.println("------------------");

				} else if (opcion_elegida == 4) {
					mostrar_accurancy(opcion_elegida);

				}
			}else if(usuario_admin.equals("A")) //Si se ingresa "A" se accede al menú de administrador.
			{	System.out.println("------------------");
				System.out.println("MENÚ ADMIN:");
				System.out.println("1. Ver la matriz completa de métricas\n"
						+ "2. Identificar el experimento con mejor F1-Score\n"
						+ "3. Calcular el promedio global de cada métrica\n"
						+ "4. Comparar dos experimentos lado a lado");
				System.out.print("Seleccione una opción (1,2,3 o 4): ");
				int opcion_elegida = Integer.parseInt(verificar.nextLine());//El usuario elige una opción (un entero)
				if (opcion_elegida == 1) 
				{
					System.out.println("------------------");
					System.out.println(" ");
					System.out.println("Matriz completa de métricas");
					System.out.println(" ");
					matrizCompletaMetricas(opcion_elegida);
					System.out.println("------------------");

				}else if (opcion_elegida ==2) 
				{
					mejorf1_score();

				}else if (opcion_elegida == 3) 
				{
					promedio_por_metrica();
				}
			}
			
			else if(usuario_admin.equals("S")) 
			{
				break;// el usuario al elegir "S" se sale del progama. 
			}
		 
		}
		System.out.println(" ");
		System.out.println("Saliendo....");

		
		
			
	}
	public static int[] matriz_confusion(String numero_exp, int opcion) throws FileNotFoundException // Se crea un metodo que reciba como parametro
	{																					// un experimento que el usuario ingrese
		File line2 = new File("predicciones.txt");          
		Scanner fila2 = new Scanner(line2); // se abre el archivo de predicciones 
		int tp_1 = 0; //contadores 
		int fp_1 = 0;
		int tn_1 = 0;
		int fn_1 = 0;
		while(fila2.hasNextLine()) // se recorre el archivo de predicciones 
		{
			String linea= fila2.nextLine();
			String[] partes = linea.split(";");
			
			String experimento = partes[0];
			int real = Integer.valueOf(partes[1]);
			int predicho = Integer.valueOf(partes[2]);
			
			if (experimento.equalsIgnoreCase(numero_exp))// sea el exp que sea lo tomara en cuenta
			{
				
				if (real == 1 &&predicho== 1) {
					tp_1 +=1;
				}else if (real == 0 &&predicho== 1) {
					fp_1 +=1;
				}else if(real == 0 &&predicho== 0) {
					tn_1 +=1;
				}else if(real == 1 &&predicho== 0) {
					fn_1 +=1;
				}
						
			}
		} if(opcion == 0) // se usa 0 ya que el numero o no pertenece a ninguna opción del menú de usuario
		{				// a su vez, usamos este metodo para retornar los contadores para asi usarlos en la opción 3 del menú de usuario
			System.out.println(" ");
			System.out.println("MATRIZ DE CONFUSIÓN DE " + numero_exp);
			System.out.println(" ");
			System.out.println("TP || FP || TN || FN \n" +
					tp_1+" || "+fp_1+"  || "+tn_1+" || "+fn_1);
			System.out.println("");
			return null;			
		
		}else if (opcion == 3 && (numero_exp.equals("EXP1") || numero_exp.equals("EXP2") ||numero_exp.equals("EXP3") ||numero_exp.equals("EXP4")) ) 
		{
			
			return new int[] {tp_1,fp_1,tn_1,fn_1};// se guardan los contadores en una lista para luego ser usados
		}
	
		return null;
		}
	public static void mostrar_accurancy(int opcion) throws FileNotFoundException 
	{ // la funcion de este metodo es almancerar todos los "accuracy" de cada experimento
		
		String[] experimentos = {"Exp1", "Exp2", "Exp3", "Exp4"};
		double[] accuracy= new double[4];
		
		File line2 = new File("predicciones.txt");          
		Scanner fila2 = new Scanner(line2); // se abre el archivo de predicciones 
		
		if (opcion == 4) 
		{
			while(fila2.hasNextLine()) // se recorre el archivo de predicciones 
			{
				String linea= fila2.nextLine();
				String[] partes = linea.split(";");
				
				String experimento = partes[0];
				int real = Integer.valueOf(partes[1]);
				int predicho = Integer.valueOf(partes[2]);
				
				
				for (int i = 0; i<4; i++) //se usa un ciclo que llama otro metodo, en el se almacena el total de accuracy por exp
				{
					if(experimento.equalsIgnoreCase(experimentos[i])) 
					{
						accuracy[i] += accuracy_tot(real,predicho);// se le agrega  a lista el total de accuracy por experimento
						break;
					}
				}	
			}
	
		}	
		System.out.println("------------------");
		System.out.println("Promedio de Accuracy de todos los modelos");
		System.out.println((" "));
		double suma_acc =0;
		for (int a= 0; a < 4; a++) 
		{
			System.out.println("Acurracy "+experimentos[a]+": "+accuracy[a]);//se muestra por pantalla el accuracy de cada experimento accediendo a su lista___
			suma_acc+= accuracy[a]; 
		}
		System.out.println("Promedio Acurracy general: "+ (suma_acc/4));//se muestra el promedio de los accuracy
		System.out.println("------------------");

	}public static double accuracy_tot( int real, int predicho) 
	{
		
			int tp_1 = 0; //contadores 
			int fp_1 = 0;
			int tn_1 = 0;
			int fn_1 = 0;
			if (real == 1 &&predicho== 1) {
				tp_1 +=1;
			}else if (real == 0 &&predicho== 1) {
				fp_1 +=1;
			}else if(real == 0 &&predicho== 0) {
				tn_1 +=1;
			}else if(real == 1 &&predicho== 0) {
				fn_1 +=1;
			}return	(double)(tp_1+ tn_1) / (tp_1+ fp_1 + tn_1+fn_1);
	
	}
	public static void matrizCompletaMetricas(int opcion) throws FileNotFoundException 
	{
		
		String[] experimentos = {"Exp1", "Exp2", "Exp3", "Exp4"};
		//int[] confusion = new int[4];
		File line2 = new File("predicciones.txt");          
		
		if (opcion == 1) 
		{
			for (int i = 0; i<experimentos.length; i++) 
			{  
				double tp = 0;
				double fp=0;   // contadores
				double tn  = 0;
				double fn = 0;
				
				Scanner fila2 = new Scanner(line2); 
				String experimento_buscar = experimentos[i];
				while(fila2.hasNextLine()) // recorre el archivo
				{
					String linea = fila2.nextLine();
					String[] partes= linea.split(";");
					
					String experimento = partes[0];
					int real = Integer.parseInt(partes[1]);
					int predicho  = Integer.parseInt(partes[2]);
					
					if (experimento.equalsIgnoreCase(experimento_buscar)) 
					{
						if(real == 1 && predicho == 1) {					// ciclo while y sigue con experimentos[1]
							tp++;								//tambien al momento de salir se printea la matriz por cada proyecto
							
						}else if (real == 0 && predicho == 1) {
							fp++;
						}else if ( real == 0 && predicho == 0) {
							tn++;
						}else if (real == 1 && predicho == 0) {
							fn++;
						}
					}
				}fila2.close();
				
				double Accuracy  = (tp+ tn) / (tp + fp + tn + fn);// se siguen las formulas del taller 
				double Precision  = tp / (tp + fp);
				double Recall  = tp / (tp + fn);
				double f1_score = 2 * (Precision  * Recall) / (Precision + Recall);
				
				System.out.println("     | Accuracy | Precision | Recall | F1_score ");
				System.out.printf("%s:| %.2f     | %.2f      |  %.2f  | %.2f%n",experimento_buscar, Accuracy,Precision,Recall,f1_score);
				
			}
		}
	}
	public static void mejorf1_score() throws FileNotFoundException 
	{
		
		String[] experimentos = {"Exp1", "Exp2", "Exp3", "Exp4"};
		//int[] confusion = new int[4];
		File line2 = new File("predicciones.txt");          
		String mejorexp = "";
		double f1_mejor = -1;
		
		
			for (int i = 0; i<experimentos.length; i++) 
			{  
				double tp = 0;
				double fp=0;   // contadores
				double tn  = 0;
				double fn = 0;
				
				Scanner fila2 = new Scanner(line2); 
				String experimento_buscar = experimentos[i];
				while(fila2.hasNextLine()) // recorre el archivo
				{
					String linea = fila2.nextLine();
					String[] partes= linea.split(";");
					
					String experimento = partes[0];
					int real = Integer.parseInt(partes[1]);
					int predicho  = Integer.parseInt(partes[2]);
					
					if (experimento.equalsIgnoreCase(experimento_buscar)) 
					{
						if(real == 1 && predicho == 1) {					// ciclo while y sigue con experimentos[1]
							tp++;								//tambien al momento de salir se printea la matriz por cada proyecto
						}else if (real == 0 && predicho == 1) {
							fp++;
						}else if ( real == 0 && predicho == 0) {
							tn++;
						}else if (real == 1 && predicho == 0) {
							fn++;
						}
					}
				}fila2.close();
				
				// se siguen las formulas del taller 
				double Precision  = tp / (tp + fp);
				double Recall  = tp / (tp + fn);
				double f1_score = 2 * (Precision  * Recall) / (Precision + Recall);
				if(f1_score>f1_mejor) 
				{
					mejorexp= experimento_buscar;
					f1_mejor = f1_score;
					
				}
				
			}System.out.println("------------------");
			System.out.print("El experimento con mejor F1-Score es: "+ mejorexp);
			System.out.printf(" con un F1_Score de  %.2f%n",f1_mejor);
			System.out.println("------------------");

	}
	public static void promedio_por_metrica() throws FileNotFoundException 
	{
		
		String[] experimentos = {"Exp1", "Exp2", "Exp3", "Exp4"};
		//int[] confusion = new int[4];
		File line2 = new File("predicciones.txt");          
		double total_acurracy = 0;
		double total_precision= 0;
		double total_recall  = 0;
		double total_f1score = 0;
		
			for (int i = 0; i<experimentos.length; i++) 
			{  
				double tp = 0;
				double fp=0;   // contadores
				double tn  = 0;
				double fn = 0;
				
				Scanner fila2 = new Scanner(line2); 
				String experimento_buscar = experimentos[i];
				while(fila2.hasNextLine()) // recorre el archivo
				{
					String linea = fila2.nextLine();
					String[] partes= linea.split(";");
					
					String experimento = partes[0];
					int real = Integer.parseInt(partes[1]);
					int predicho  = Integer.parseInt(partes[2]);
					
					if (experimento.equalsIgnoreCase(experimento_buscar)) 
					{
						if(real == 1 && predicho == 1) {					
							tp++;								
						}else if (real == 0 && predicho == 1) {
							fp++;
						}else if ( real == 0 && predicho == 0) {
							tn++;
						}else if (real == 1 && predicho == 0) {
							fn++;
						}
					}
				}fila2.close();
				
				double Accuracy  = (tp+ tn) / (tp + fp + tn + fn);
				double Precision  = tp / (tp + fp);
				double Recall  = tp / (tp + fn);
				double f1_score = 2 * (Precision  * Recall) / (Precision + Recall);
				
				total_acurracy+=Accuracy;
				total_precision += Precision;
				total_recall+= Recall;
				total_f1score += f1_score;
				
			}
			int total = experimentos.length;
			double promedio_acuracy =total_acurracy/total;
			double promedio_precision=total_precision/total;
			double promedio_recall =total_recall/total;
			double promedio_f1_score =total_f1score/total;
			promedio_acuracy = Math.round(promedio_acuracy*100.0)/100.0;
			promedio_precision = Math.round(promedio_precision*100.0)/100.0;
			promedio_recall = Math.round(promedio_recall*100.0)/100.0;
			promedio_f1_score = Math.round(promedio_f1_score*100.0)/100.0;

			
			System.out.println("Promedio global total de Accuracy: "+ promedio_acuracy);
			System.out.println("Promedio global total de Precision: "+ promedio_precision);
			System.out.println("Promedio global total de Recall: "+ promedio_recall);
			System.out.println("Promedio global total de F1-Score: "+ promedio_f1_score);

			
	}		
		
	
}
