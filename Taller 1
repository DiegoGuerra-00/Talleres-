package DiegoGuerra_JoaquinBerenguela_Taller1Poo;

// Diego Guerra Estay || 21.686.594-4 || ICCI
// Joaquin Berenguela Caimanque || 21.708.988-3 || ICCI

import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Scanner;

public class App {

	public static void main(String[] args) throws IOException{
		
		while (true) {
			
			Scanner verificar = new Scanner(System.in);  //USAR VERIFICAR PARA TEMA DE INPUT
			
			System.out.print("¿MENÚ USUARIO O MENÚ ADMIN? (U/A/S para salir): ");
			String usuario_admin = verificar.nextLine().toUpperCase(); //USA "toUpperCase" para que siempre sea mayuscula
			
			if (usuario_admin.equals("U")) {// Si se ingresa "U", se accede al menú de usuario y se muestran las opciones
							
				System.out.println("------------------");
				System.out.println("MENÚ USUARIO:");
				System.out.println("1. Ver lista experimentos \n" + 
									"2. Mostrar matriz de confusión de un experimento \n"+
									"3. Ver métricas de un experimento \n"+
									"4. Ver promedio de Accuracy de todos los modelos"
									);
				System.out.print("Seleccione una opción (1,2,3 o 4): ");
				
				int opcion_elegida = Integer.parseInt(verificar.nextLine());//El usuario elige una opción (un entero)
				
				if (opcion_elegida == 1) {
				 //Opcion 1, se muestran los experimentos 
					
					System.out.println("------------------");
					System.out.println("Lista experimentos:");
					File line = new File("experimentos.txt"); // se abre el archivo
					Scanner fila = new Scanner(line);								// con los experimentos
						
					while(fila.hasNextLine()) {// se recorre el archivo 
					
						String linea = fila.nextLine();
						String[] partes = linea.split(";");
						
						String identificador = partes[0];
						String descripcion= partes[1];
						
						System.out.println(identificador+" " + descripcion);	// se muestran por pantalla los experimentos
					}fila.close();
					
					System.out.println("------------------");
																
				}
				
				else if(opcion_elegida == 2) {
					// opción 2, se muestra un exp en especifico 
					
					System.out.println("------------------");
					System.out.print("Eliga un experimento (Exp1, Exp2, Exp3, Exp4): ");
					String nuevo_exp = verificar.nextLine().toUpperCase();// sera si o si en mayuscula 
					while (!nuevo_exp.equals("EXP1") && !nuevo_exp.equals("EXP2") && !nuevo_exp.equals("EXP3") && (!nuevo_exp.equals("EXP4"))) 
					{
						System.out.println("Error, debe ingresar 'Exp1', 'Exp2', 'Exp3' o 'Exp4'"); // en este while se hace una prueba de error
						System.out.print("Eliga un experimento: ");
						nuevo_exp = verificar.nextLine().toUpperCase();
					}
						
					matriz_confusion(nuevo_exp,0); // Se llama al metodo y se muestra el resultado 
					System.out.println("------------------");
					
				}else if (opcion_elegida == 3) {// lo mismo con la opción 3
				
					System.out.println("------------------");
					System.out.print("Eliga un experimento (Exp1, Exp2, Exp3, Exp4): ");
					String nuevo_exp = verificar.nextLine().toUpperCase();
					
					while (!nuevo_exp.equals("EXP1") && !nuevo_exp.equals("EXP2") && !nuevo_exp.equals("EXP3") && (!nuevo_exp.equals("EXP4"))) {
						
						System.out.println("Error, debe ingresar 'Exp1', 'Exp2', 'Exp3' o 'Exp4'"); // en este while se hace una prueba de error
						System.out.print("Eliga un experimento: ");
						nuevo_exp = verificar.nextLine().toUpperCase();
					}
					matriz_confusion(nuevo_exp,opcion_elegida); // Se retorna una lista con todos los contadores del respectivo proyecto.
																// Luego se almacenan en variables.
					double tp = matriz_confusion(nuevo_exp,opcion_elegida)[0];
					double fp = matriz_confusion(nuevo_exp,opcion_elegida)[1];
					double tn = matriz_confusion(nuevo_exp,opcion_elegida)[2];
					double fn = matriz_confusion(nuevo_exp,opcion_elegida)[3];
					
					double Accuracy  = accuracy(tp, tn, fp, fn);// se siguen las formulas del taller 
					double Precision  = precision(tp, fp);
					double Recall  = recall(tp, fn);
					double f1_score = f1_score(Precision, Recall);
					
					Accuracy = Math.round(Accuracy * 100.0)/100.0;
					Precision = Math.round(Precision * 100.0)/100.0;
					Recall = Math.round(Recall * 100.0)/100.0;
					f1_score = Math.round(f1_score * 100.0)/100.0;

					System.out.println(" ");
					System.out.println("------------------");
					System.out.println("MÉTRICAS DE EXPERIMENTO "+nuevo_exp); // se muestra en pantalla 
					System.out.println(" ");
					System.out.println("Accuracy: "+Accuracy+"\n" +"Precision: "+Precision+"\n"+"Recall: "+Recall+"\n"+"F1: "+f1_score);
					System.out.println(" ");
					System.out.println("------------------");

				} else if (opcion_elegida == 4) {
					mostrar_accurancy(opcion_elegida);  // muestra por pantalla todos los accurancy 
				}
			}
			else if(usuario_admin.equals("A")){ //Si se ingresa "A" se accede al menú de administrador.
			
				System.out.println("------------------");
				System.out.println("MENÚ ADMIN:");
				System.out.println("1. Ver la matriz completa de métricas\n"
						+ "2. Identificar el experimento con mejor F1-Score\n"
						+ "3. Calcular el promedio global de cada métrica\n"
						+ "4. Comparar dos experimentos lado a lado");
				System.out.print("Seleccione una opción (1,2,3 o 4): ");
				
				int opcion_elegida = Integer.parseInt(verificar.nextLine());//El usuario elige una opción (un entero)
				
				if (opcion_elegida == 1) {
					
					System.out.println("------------------");
					System.out.println(" ");
					System.out.println("Matriz completa de métricas");
					System.out.println(" ");
					matrizCompletaMetricas(opcion_elegida); //muestra matriz completa de metricas 
					System.out.println(" ");
					System.out.println("------------------");
				}
				else if (opcion_elegida ==2) {
				
					mejorf1_score(); // muestra por pantalla el experimento con mejor f1_Score
				}
				else if (opcion_elegida == 3) {
				
					System.out.println("------------------");
					System.out.println("Promedio global de cada métrica:");
					System.out.println(" ");
					promedio_por_metrica();  // muestra promedio de cada metrica (globalmente)
					System.out.println(" ");
					System.out.println("------------------");

				}
				else if (opcion_elegida == 4) {
				
					System.out.println("------------------");
					System.out.println("Ingrese 2 experimentos para comparar (Exp1, Exp2, Exp3, Exp4)");				
					System.out.println(" ");
					System.out.print("1. "); 
					String exp_n = verificar.nextLine().toUpperCase();  // el usuario debe elegir 2 experimentos 
					System.out.print("2. ");
					String exp_n2 = verificar.nextLine().toUpperCase();
					System.out.println(" ");
					System.out.println("------------------");	
					System.out.println(" ");
					compararDosExperimentos(exp_n, exp_n2); // con esos 2 experimentos se hace la comparacion y se muestra por pantalla
					System.out.println("------------------");					

				}
			}else if(usuario_admin.equals("S")) {
				break;// el usuario al elegir "S" se sale del programa.| 
			}
		}
		
		System.out.println(" ");
		System.out.println("Saliendo....");

	}
	public static int[] matriz_confusion(String numero_exp, int opcion) throws FileNotFoundException {// Se crea un metodo que reciba como parametro
																									 //  un experimento que el usuario ingrese.
		File line2 = new File("predicciones.txt");          
		Scanner fila2 = new Scanner(line2); // se abre el archivo de predicciones 
		
		int tp_1 = 0; //contadores 
		int fp_1 = 0;
		int tn_1 = 0;
		int fn_1 = 0;
		
		while(fila2.hasNextLine()){ // se recorre el archivo de predicciones 
		
			String linea= fila2.nextLine();
			String[] partes = linea.split(";");
			
			String experimento = partes[0];
			int real = Integer.valueOf(partes[1]);
			int predicho = Integer.valueOf(partes[2]);
			
			if (experimento.equalsIgnoreCase(numero_exp)) {// sea el exp que sea lo tomara en cuenta

				if (real == 1 && predicho == 1) {
					tp_1 += 1;
				} else if (real == 0 && predicho == 1) {
					fp_1 += 1;
				} else if (real == 0 && predicho == 0) {
					tn_1 += 1;
				} else if (real == 1 && predicho == 0) {
					fn_1 += 1;
				}
						
			}
		} if(opcion == 0) // se usa 0 ya que el numero o no pertenece a ninguna opción del menú de usuario
		{				// a su vez, usamos este metodo para retornar los contadores para asi usarlos en la opción 3 del menú de usuario
			System.out.println(" ");
			System.out.println("MATRIZ DE CONFUSIÓN DE " + numero_exp);
			System.out.println(" ");
			System.out.println(" TP  ||  FP  ||  TN  ||  FN  \n  " +
					tp_1+" ||  "+fp_1+"   ||  "+tn_1+"  ||  "+fn_1);
			System.out.println("");
			return null;			
		
		}else if (opcion == 3 && (numero_exp.equals("EXP1") || numero_exp.equals("EXP2") ||
				  numero_exp.equals("EXP3") ||numero_exp.equals("EXP4")) ) {
			return new int[] {tp_1,fp_1,tn_1,fn_1};// se guardan los contadores en una lista para luego ser usados
		}
	
		return null;
		}
	
	public static void mostrar_accurancy(int opcion) throws FileNotFoundException { 
		// el propósito de este método es almancerar todos los "accuracy" de cada experimento.
		
		String[] experimentos = {"Exp1", "Exp2", "Exp3", "Exp4"};
		double[] accuracy= new double[4];
		
		File line2 = new File("predicciones.txt");          
		Scanner fila2 = new Scanner(line2); // se abre el archivo de predicciones 
		
		if (opcion == 4) {
			
			while(fila2.hasNextLine()) {// se recorre el archivo de predicciones 
			
				String linea= fila2.nextLine();
				String[] partes = linea.split(";");
				
				String experimento = partes[0];
				int real = Integer.valueOf(partes[1]);
				int predicho = Integer.valueOf(partes[2]);
				
				
				for (int i = 0; i<4; i++) {//se usa un ciclo que llama otro metodo, en el se almacena el total de accuracy por exp
				
					if(experimento.equalsIgnoreCase(experimentos[i])) 
					{
						accuracy[i] += accuracy_tot(real,predicho);// se le agrega  a lista el total de accuracy por experimento
						break;
					}
				}	
			}
		}	
		System.out.println("------------------");
		System.out.println("Promedio de Accuracy de todos los modelos");
		System.out.println((" "));
		double suma_acc =0;
		for (int a= 0; a < 4; a++) 
		{
			System.out.println("Acurracy "+experimentos[a]+": "+accuracy[a]);//se muestra por pantalla el accuracy de cada experimento accediendo a su lista___
			suma_acc+= accuracy[a]; 
		}
		System.out.println("Promedio Acurracy general: "+ (suma_acc/4));//se muestra el promedio de los accuracy
		System.out.println("------------------");

	}
	public static double accuracy_tot( int real, int predicho) 	{
		
			int tp_1 = 0; //contadores 
			int fp_1 = 0;
			int tn_1 = 0;
			int fn_1 = 0;
			
			if (real == 1 &&predicho== 1) {
				tp_1 +=1;
			}else if (real == 0 &&predicho== 1) {
				fp_1 +=1;
			}else if(real == 0 &&predicho== 0) {
				tn_1 +=1;
			}else if(real == 1 &&predicho== 0) {
				fn_1 +=1;
			}return	(double)(tp_1+ tn_1) / (tp_1+ fp_1 + tn_1+fn_1);
	
	}
	public static void matrizCompletaMetricas(int opcion) throws FileNotFoundException 	{
		
		String[] experimentos = {"Exp1", "Exp2", "Exp3", "Exp4"};
		File line2 = new File("predicciones.txt");          
		
		if (opcion == 1) {
		
			for (int i = 0; i<experimentos.length; i++) {
		  
				double tp = 0;
				double fp = 0;   // contadores
				double tn = 0;
				double fn = 0;
				
				Scanner fila2 = new Scanner(line2); 
				String experimento_buscar = experimentos[i];
				
				while(fila2.hasNextLine()) // recorre el archivo
				{
					String linea = fila2.nextLine();
					String[] partes= linea.split(";");
					
					String experimento = partes[0];
					int real = Integer.parseInt(partes[1]);
					int predicho  = Integer.parseInt(partes[2]);
					
					if (experimento.equalsIgnoreCase(experimento_buscar)) {
					 
						if(real == 1 && predicho == 1) {	// ciclo while y sigue con experimentos[1]
							tp++;							//tambien al momento de salir se printea la matriz por cada proyecto
							
						}else if (real == 0 && predicho == 1) {
							fp++;
						}else if ( real == 0 && predicho == 0) {
							tn++;
						}else if (real == 1 && predicho == 0) {
							fn++;
						}
					}
				}fila2.close();
				
				double Accuracy  = accuracy(tp, tn, fp, fn); // se siguen las formulas del taller 
				double Precision  = precision(tp, fp);     // y se llaman los metodos de cada metrica 
				double Recall  = recall(tp, fn);     
				double f1_score = f1_score(Precision, Recall);
				 
				Accuracy = Math.round(Accuracy*100.0)/100.0;
				Precision = Math.round(Precision*100.0)/100.0;  // se redondea los double 
				Recall = Math.round(Recall*100.0)/100.0;
				f1_score = Math.round(f1_score*100.0)/100.0;
				
				System.out.println("     | Accuracy | Precision | Recall | F1_score ");
				System.out.println(experimento_buscar+" | "+Accuracy+"     | "+Precision+"      | "+Recall+"    | "+f1_score);
			}
		}
	}
	public static void mejorf1_score() throws FileNotFoundException {
		
		String[] experimentos = {"Exp1", "Exp2", "Exp3", "Exp4"};
		File line2 = new File("predicciones.txt");          
		String mejorexp = "";
		double f1_mejor = -1;
		
			for (int i = 0; i<experimentos.length; i++) 
			{  
				double tp = 0;
				double fp = 0;   // contadores
				double tn = 0;
				double fn = 0;
				
				Scanner fila2 = new Scanner(line2); 
				String experimento_buscar = experimentos[i];
				while(fila2.hasNextLine()){ // Recorre el archivo
				
					String linea = fila2.nextLine();
					String[] partes= linea.split(";");
					
					String experimento = partes[0];
					int real = Integer.parseInt(partes[1]);
					int predicho  = Integer.parseInt(partes[2]);
					
					if (experimento.equalsIgnoreCase(experimento_buscar)) {
						
						if(real == 1 && predicho == 1) {		// Ciclo while y for sigue con experimentos[1].
							tp++;								// Tambien al momento de salir se printea la matriz por cada proyecto.
						}else if (real == 0 && predicho == 1) {
							fp++;
						}else if ( real == 0 && predicho == 0) {
							tn++;
						}else if (real == 1 && predicho == 0) {
							fn++;
						}
					}
				}fila2.close();
				
				// se siguen las formulas del taller llamando los metodos de las metricas 
				double Precision  = precision(tp, fp);
				double Recall  = recall(tp, fn);
				double f1_score = f1_score(Precision, Recall);
				
				if(f1_score>f1_mejor) { // se elige el mejor f1_score de los experimentos y se guardan los datos 
					mejorexp= experimento_buscar;
					f1_mejor = f1_score;  
				}
			}
			
			f1_mejor = Math.round(f1_mejor*100.0)/100.0;
			System.out.println("------------------");
			System.out.println("El experimento con mejor F1-Score es: "+ mejorexp+" con un F1_Score de "+f1_mejor);
			System.out.println("------------------");

	}
	public static void promedio_por_metrica() throws FileNotFoundException {// Se crea un método que mostrará el promedio global de cada métrica.
		
		String[] experimentos = {"Exp1", "Exp2", "Exp3", "Exp4"};
		File line2 = new File("predicciones.txt");       
		
		double total_accuracy = 0; // Se crean contadores generales fuera del ciclo for para ser usados en el promedio general.
		double total_precision = 0; 
		double total_recall  = 0;
		double total_f1score = 0;
		
			for (int i = 0; i<experimentos.length; i++) // Este for recorre 4 veces que son los 4 experimentos. 
			{  
				double tp = 0;
				double fp = 0;   // contadores
				double tn = 0;
				double fn = 0;
				
				Scanner fila2 = new Scanner(line2); 
				String experimento_buscar = experimentos[i];
				while(fila2.hasNextLine()) // recorre el archivo con las metricas 
				{
					String linea = fila2.nextLine();
					String[] partes= linea.split(";");
					
					String experimento = partes[0];
					int real = Integer.parseInt(partes[1]);
					int predicho  = Integer.parseInt(partes[2]);
					
					if (experimento.equalsIgnoreCase(experimento_buscar)) {
					
						if(real == 1 && predicho == 1) { // cada vez que se encuentre cierta condicion, se le sumara 1 a los contadores 			
							tp++;								
						}else if (real == 0 && predicho == 1) {
							fp++;
						}else if ( real == 0 && predicho == 0) {
							tn++;
						}else if (real == 1 && predicho == 0) {
							fn++;
						}
					}
				}fila2.close();
				
				double Accuracy  = accuracy(tp, tn, fp, fn);
				double Precision  = precision(tp, fp);   // mismas formulas que le taller, se usan los contadores 
				double Recall  = recall(tp, fn);
				double f1_score = f1_score(Precision, Recall);
				
				total_accuracy+=Accuracy;    
				total_precision += Precision;
				total_recall+= Recall;
				total_f1score += f1_score;
				
			}
			
			int total = experimentos.length;
			
			double promedio_accuracy =total_accuracy/total;
			double promedio_precision=total_precision/total;   // se saca el promeddio divido el total de experimentos 
			double promedio_recall =total_recall/total;
			double promedio_f1_score =total_f1score/total;
			
			promedio_accuracy = Math.round(promedio_accuracy*100.0)/100.0;  // se redondean los double 
			promedio_precision = Math.round(promedio_precision*100.0)/100.0;
			promedio_recall = Math.round(promedio_recall*100.0)/100.0;
			promedio_f1_score = Math.round(promedio_f1_score*100.0)/100.0;

			System.out.println("Promedio global de Accuracy: "+ promedio_accuracy);
			System.out.println("Promedio global de Precision: "+ promedio_precision);
			System.out.println("Promedio global de Recall: "+ promedio_recall);
			System.out.println("Promedio global de F1-Score: "+ promedio_f1_score);

	}	
	public static void compararDosExperimentos(String exp1, String exp2) throws FileNotFoundException {
		// metodo que compara 2 experimentos elegidos por el usuario
		String[] experimentos = {exp1, exp2};
		File line2 = new File("predicciones.txt");    
		
		double[] accurrys = new double[2];
		double[] precisions = new double[2];
		double[] recalls = new double[2]; // se crean listas de doubles, ahi se guardaran los resultados de los
		double[] f1_Scores = new double[2];  // 2 experimentos a comparar 
		
		double[] tps = new double[2];   // aqui pasa lo  mismo
		double[] fps = new double[2];
		double[] tns = new double[2];
		double[] fns = new double[2];

		String experimentoMayorAccu = "";
		String experimentoMayorPrec = "";
		String experimentoMayorRecall = "";  // se crean variables  para mayores 
		String experimentoMayorF1 = "";
		
		int contadorExp1 = 0;
		int contadorExp2 = 0;
		
		for (int i =0; i<experimentos.length; i++) {
			
			double tp = 0;
			double fp = 0;   // contadores
			double tn = 0;
			double fn = 0;
			
			Scanner fila2 = new Scanner(line2); 
			String experimento_actual = experimentos[i];
			while(fila2.hasNextLine()) 
			{
				String linea = fila2.nextLine();
				String[] partes= linea.split(";");
				
				String experimento = partes[0];
				int real = Integer.parseInt(partes[1]);
				int predicho  = Integer.parseInt(partes[2]);

				if (experimento.equalsIgnoreCase(experimento_actual)) {
				
					if(real == 1 && predicho == 1) { // cada vez que se encuentre cierta condicion, se le sumara 1 a los contadores 			
						tp++;								
					}else if (real == 0 && predicho == 1) {
						fp++;
					}else if ( real == 0 && predicho == 0) {
						tn++;
					}else if (real == 1 && predicho == 0) {
						fn++;
					}
				}
			}fila2.close();
			
			double Acurracy1= accuracy(tp, tn, fn, fp); // se llaman los metodos de las metricas 
			double Precision1 = precision(tp, fp);
			double Recall1 = recall(tp, fn);
			double F1_score1 = f1_score(Precision1, Recall1);
			
			accurrys[i] = Math.round(Acurracy1*100.0)/100.0;  // se redondea 
			precisions[i]= Math.round(Precision1*100.0)/100.0;
			recalls[i]= Math.round(Recall1*100.0)/100.0;
			f1_Scores[i]	= Math.round(F1_score1*100.0)/100.0;
			
			tps[i] =tp;
			fps[i] =fp;
			tns[i] =tn;
			fns[i] =fn;

		}
		
		//Aquí se comparan las metricas de un experimento con otro
		
		if (accurrys[0] > accurrys[1]) {
			experimentoMayorAccu = exp1;
			contadorExp1++;
			
		}else if( accurrys[0] < accurrys[1]) {
			experimentoMayorAccu = exp2;
			contadorExp2++;
			
		}if (precisions[0]>precisions[1]) {
			experimentoMayorPrec = exp1;
			contadorExp1 ++;
			
		}else if (precisions[0]<precisions[1]) {
			experimentoMayorPrec = exp2;
			contadorExp2++;
			
		}if (recalls[0]> recalls[1]) {
			experimentoMayorRecall = exp1;
			contadorExp1 ++;
			
		}else if(recalls[0]< recalls[1]) {
			experimentoMayorRecall = exp2;
			
			contadorExp2++;
		}if (f1_Scores[0]> f1_Scores[1]) {
			experimentoMayorF1= exp1;
			
		}else if (f1_Scores[0]< f1_Scores[1]) {
			experimentoMayorF1= exp2;

		} 
		
		System.out.println("Metricas    "+ exp1 +" | "+ exp2);
		System.out.println("Accuracy:   "+ accurrys[0] +" | "+ accurrys[1] +" -- "+ experimentoMayorAccu +" es el mas exacto"); 
		System.out.println("Precision:  "+ precisions[0] +" | "+ precisions[1]+ " -- "+ experimentoMayorPrec +" es el mas preciso");
		System.out.println("Recall:     "+ recalls[0] +" | "+ recalls[1]+" -- "+ experimentoMayorRecall +" tiene mejor recall ");
		System.out.println("F1_score:   "+ f1_Scores[0] +" | "+ f1_Scores[1]+" -- "+ experimentoMayorF1 +" tiene un mejor balance ");
		System.out.println(" ");
		System.out.println("Predicciones  "+ exp1+ " | "+ exp2);  // se muestra todo por pantalla 
		System.out.println("TP:           "+tps[0]+" | "+tps[1]);
		System.out.println("FP:           "+fps[0]+"  | "+fps[1]);
		System.out.println("TN:           "+tns[0]+" | "+tns[1]);   
		System.out.println("FN:           "+fns[0]+"  | "+fns[1]);
		System.out.println(" ");
		System.out.println("------------------");
		  
		if (contadorExp1 ==3) {     // en estas condicionales se va comparando que experimento es mejor 
			System.out.println("El "+exp1+" es buen modelo");   
			
		}else if (contadorExp2 == 3) {
			System.out.println("El "+exp2+" es buen modelo");
			
		}if (f1_Scores[0]> f1_Scores[1]) {
			System.out.println(exp1+ " tiene un mejor F1_score, por ende es mas eficiente"); 
			
		}else if(f1_Scores[0]< f1_Scores[1]) {
			System.out.println(exp2+ " tiene un mejor F1_score, por ende es mas eficiente"); 
			
		}
		
		
	}
	public static void mostrarComparacion() throws FileNotFoundException 
	{  // pal puntaje extraaa
		int[] tps = new int[4];
		int[] fps = new int[4];
		int[] tns = new int[4];
		int[] fns = new int[4];
		String[] experimentos = {"Exp1", "Exp2", "Exp3", "Exp4"};
		File line2 = new File("predicciones.txt");          

		for (int i = 0; i < experimentos.length; i++) 
		{
			
			int tp = 0;
			int fp=0;   // contadores
			int tn  = 0;
			int fn = 0;
			
			Scanner fila2 = new Scanner(line2); 
			String experimento_actual = experimentos[i];
			while(fila2.hasNextLine()) 
			{
				String linea = fila2.nextLine();
				String[] partes= linea.split(";");
				
				String experimento = partes[0];
				int real = Integer.parseInt(partes[1]);
				int predicho  = Integer.parseInt(partes[2]);

				if (experimento.equalsIgnoreCase(experimento_actual)) 
				{
					if(real == 1 && predicho == 1) { // cada vez que se encuentre cierta condicion, se le sumara 1 a los contadores 			
						tp++;								
					}else if (real == 0 && predicho == 1) {
						fp++;
					}else if ( real == 0 && predicho == 0) {
						tn++;
					}else if (real == 1 && predicho == 0) {
						fn++;
					}
				}
			}fila2.close();
			
			tps[i] = tp; // falta hacer contadores y matriz 
			fps[i]  = fp;
			tns[i] = tn;
			fns[i] = fn;	
		}
		System.out.println("        TP    FP    TN    FN  ");
		for (int i = 0; i <experimentos.length; i++) {
			System.out.println(experimentos[i] 
					+"    "+ tps[i]
					+"     "+fps[i]
					+"     " +tns[i]
					+"    "+fns[i]+"   ");
		}
		
	}
	public static double accuracy(double tp, double tn, double fp, double fn){  //Se crean metodos para cada metrica	
		return (tp+ tn) / (tp + fp + tn + fn);								
	}
	public static double precision(double tp, double fp) {
		return tp / (tp + fp);                                            
	}
	public static double recall(double tp, double fn) {
		return  tp / (tp + fn);
	}
	public static double f1_score(double Precision, double Recall) {
		return 2* (Precision  * Recall) / (Precision + Recall);
	}
}
